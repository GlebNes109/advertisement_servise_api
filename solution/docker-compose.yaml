version: '3.8'

services:
  app:
    build: .
    container_name: fastapi_app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # DATABASE_URL: postgresql://user:password@db:5432/dbname
      # REDIS_URL: redis://redis:6379/0
      POSTGRES_HOST: db
      POSTGRES_USERNAME: postgres_admin
      POSTGRES_PASSWORD: post1246672gres
      REDIS_HOST: redis
      SERVER_ADDRESS: 0.0.0.0:8080

    networks:
      - internal

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres_admin
      POSTGRES_PASSWORD: post1246672gres
      POSTGRES_DB: prod2025
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_admin -d prod2025" ]
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 10

  redis:
    image: redis:7
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 10

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - app
    networks:
      - internal

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin1221
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - internal

networks:
  internal:

volumes:
  postgres_data:
  grafana_data:
